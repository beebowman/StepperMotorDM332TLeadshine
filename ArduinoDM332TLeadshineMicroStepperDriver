//DEBUGGING: Why is it only turning one particular direction????? 
//TIP: make sure the power is turned on for your power supply LED indicator light. Make sure the DM332T also has the power indicator light turned on and green. 
// If those two indicator power lights aren't on, then you have a problem with power; either loose pins to your DM332T, or need better power supply. I took adapters off wall and it magically worked! 
// Check the table regarding the pins, in the online pdf instruction manual for your DM332T 
// Once I got the power right, it turned. Yay! But it was only turning in one direction, not the other, no matter whether I set the DIR pin to HIGH or LOW. 
// The solution to getting the motor to run one way and then the other, was to connect a pin on the Arduino to the ENA pin fo teh DM332T micro stepper motor driver 

//Credits: 
//Credit to here for NEMA connection to motor driver: https://vslot-poland.com/how-to-connet-arduino-to-nema 

int x;

void setup() {
  // put your setup code here, to run once:
  pinMode(7,OUTPUT); //enable, ENA 
  pinMode(9,OUTPUT); //pulse, PUL
  pinMode(8,OUTPUT); //direction, DIR, used to be pin 8
  Serial.begin(9600);

  digitalWrite(7,HIGH); //set to ENABLE 

}


void loop() {
  // put your main code here, to run repeatedly:

  digitalWrite(8,HIGH); //set direction "go backwards"

  Serial.println("Pin 8 DIR has now been set to on HIGH");
  delayMicroseconds(1500);

  delayMicroseconds(500); //wait (pause) for 500 microseconds 
  for(x=0;x<80;x++) //this loop dictates the distance it travels (or maybe the time that it travels??)

  {
    digitalWrite(9,HIGH); //pulse (move) the motor 
    delayMicroseconds(500); //wait (pause) for 500 microseconds 

    digitalWrite(9,LOW); //stop the motor 
    delayMicroseconds(500); //wait (pause) for 500 microseconds 

  }
  delayMicroseconds(500);
  delay(1000);

  digitalWrite(8,LOW); //Set direction to be the opposite way

  Serial.println("Pin 8 DIR has been being set to on LOW");
  delayMicroseconds(1500);

  delayMicroseconds(500); //wait (pause) for 500 microseconds 
  for(x=0;x<80;x++) //this loop dictates the distance it travels. 
  {
    digitalWrite(9,HIGH); //pulse (move) the motor 
    delayMicroseconds(500); //wait (pause) for 500 microseconds 
    digitalWrite(9,LOW); //stop the motor 
    delayMicroseconds(500); //wait (pause) for 500 microseconds 

  }

delay(1000);

}
